<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ca√ßa-N√≠quel de Frutas (Imagens Locais)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Poppins:wght@600;700;800&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #1f2937 0%, #374151 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            color: #e5e7eb;
            overflow-x: hidden;
        }
        .slot-machine {
            background-color: rgba(55, 65, 81, 0.8);
            backdrop-filter: blur(12px);
            padding: 25px;
            border-radius: 24px;
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);
            text-align: center;
            width: 90%;
            max-width: 480px;
            position: relative;
        }
        .title {
            font-family: 'Poppins', sans-serif;
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 25px;
            color: #fff;
            text-shadow: 0 0 10px rgba(255,255,255,0.3), 0 0 20px rgba(255,255,255,0.2);
        }
        .reels {
            display: flex;
            justify-content: space-around;
            margin-bottom: 30px;
            background-color: rgba(31, 41, 55, 0.7);
            padding: 20px;
            border-radius: 18px;
            border: 1px solid rgba(255,255,255,0.1);
        }
        .reel {
            width: 90px;
            height: 110px;
            background-color: #4b5563;
            border-radius: 12px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            box-shadow: inset 0 2px 8px rgba(0,0,0,0.3), 0 1px 2px rgba(255,255,255,0.1);
            transition: box-shadow 0.3s ease;
        }
        .reel-image {
            max-width: 80px;
            max-height: 80px;
            object-fit: contain;
            transition: transform 0.1s ease-in-out, opacity 0.1s ease-in-out;
        }
        .reel.spinning .reel-image {
            animation: modernSpinImageAnimation 0.08s linear infinite;
            box-shadow: none;
        }
         .reel.spinning {
            box-shadow: inset 0 0 15px rgba(167, 139, 250, 0.5), 0 0 10px rgba(167, 139, 250, 0.3);
        }

        @keyframes modernSpinImageAnimation {
            0% { transform: translateY(-12px) scale(0.95); opacity: 0.7; }
            50% { transform: translateY(12px) scale(1); opacity: 1; }
            100% { transform: translateY(-12px) scale(0.95); opacity: 0.7; }
        }

        .controls button {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(to right, #8b5cf6, #ec4899);
            color: white;
            padding: 15px 35px;
            border: none;
            border-radius: 12px;
            font-size: 1.25rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3), 0 0 20px rgba(236, 72, 153, 0.4);
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        .controls button:hover {
            background: linear-gradient(to right, #a78bfa, #f472b6);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4), 0 0 30px rgba(236, 72, 153, 0.6);
            transform: translateY(-3px) scale(1.05);
        }
        .controls button:active {
            transform: translateY(0) scale(1);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3), 0 0 15px rgba(236, 72, 153, 0.3);
        }
        .controls button:disabled {
            background: #4b5563;
            cursor: not-allowed;
            opacity: 0.6;
            box-shadow: none;
            transform: none;
        }
        .info { margin-top: 30px; font-size: 1.1rem; }
        .info p { margin: 10px 0; background-color: rgba(31, 41, 55, 0.5); padding: 12px; border-radius: 10px; }
        .message { font-weight: 600; min-height: 28px; font-size: 1.15rem; transition: color 0.3s ease; }
        .modal { display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(17, 24, 39, 0.85); backdrop-filter: blur(5px); justify-content: center; align-items: center; }
        .modal-content { background-color: #374151; color: #d1d5db; margin: auto; padding: 30px; border: none; border-radius: 16px; width: 85%; max-width: 420px; text-align: center; box-shadow: 0 10px 30px rgba(0,0,0,0.6); }
        .modal-content h2 { font-family: 'Poppins', sans-serif; font-weight: 700; margin-top: 0; margin-bottom: 15px; color: #fff; font-size: 1.8rem; }
        .modal-content p { font-size: 1.1rem; margin-bottom: 25px; }
        .modal-button { font-family: 'Poppins', sans-serif; background: linear-gradient(to right, #8b5cf6, #ec4899); color: white; padding: 12px 28px; border: none; border-radius: 10px; font-size: 1.1rem; font-weight: 600; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 4px 10px rgba(0,0,0,0.2); }
        .modal-button:hover { background: linear-gradient(to right, #a78bfa, #f472b6); box-shadow: 0 6px 15px rgba(0,0,0,0.3); transform: translateY(-2px); }

        #loadingOverlay {
            position: absolute;
            inset: 0;
            background-color: rgba(31, 41, 55, 0.95);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 50;
            border-radius: 24px;
        }
        .loader {
            border-top-color: #8b5cf6;
            animation: spinner 1.2s linear infinite;
            border: 8px solid #4b5563;
            border-top-width: 8px;
            border-top-style: solid;
        }
        @keyframes spinner {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 480px) {
            .slot-machine { padding: 20px; border-radius: 20px; }
            .title { font-size: 2rem; }
            .reels { padding: 15px; border-radius: 16px; }
            .reel { width: 70px; height: 90px; border-radius: 10px; }
            .reel-image { max-width: 60px; max-height: 60px; }
            .controls button { padding: 12px 25px; font-size: 1.1rem; }
            .info { font-size: 1rem; }
            .info p { padding: 10px; }
            .modal-content { padding: 25px; }
            .modal-content h2 { font-size: 1.6rem; }
            .modal-content p { font-size: 1rem; }
            .modal-button { padding: 10px 24px; font-size: 1rem; }
        }
         @media (max-width: 380px) {
            .reel { width: 60px; height: 80px; }
            .reel-image { max-width: 50px; max-height: 50px; }
            .title { font-size: 1.8rem; }
        }
    </style>
</head>
<body>
    <div class="slot-machine">
        <div id="loadingOverlay">
            <div class="loader ease-linear rounded-full h-24 w-24 mb-4"></div>
            <p id="loadingMessage" class="text-white text-xl font-semibold text-center px-4">A carregar imagens locais...</p>
        </div>

        <h1 class="title">CA√áA-FRUTAS</h1>
        <div class="reels">
            <div class="reel" id="reel1Container"><img src="" alt="S√≠mbolo do rolo 1" class="reel-image" id="reel1Image"></div>
            <div class="reel" id="reel2Container"><img src="" alt="S√≠mbolo do rolo 2" class="reel-image" id="reel2Image"></div>
            <div class="reel" id="reel3Container"><img src="" alt="S√≠mbolo do rolo 3" class="reel-image" id="reel3Image"></div>
        </div>
        <div class="controls">
            <button id="spinButton" disabled>Girar</button>
        </div>
        <div class="info">
            <p>CR√âDITOS: <span id="credits">100</span></p>
            <p class="message" id="message">A carregar...</p>
        </div>
    </div>

    <div id="gameOverModal" class="modal">
        <div class="modal-content">
            <h2 id="modalTitle">FIM DE JOGO!</h2>
            <p id="modalMessage">Voc√™ ficou sem cr√©ditos.</p>
            <button id="resetButton" class="modal-button">JOGAR NOVAMENTE</button>
        </div>
    </div>

    <script>
        let symbols = [
            { name: 'Lim√£o', emojiForMessage: 'üçã', value: 'LEMON', imageSrc: 'imagens_frutas/limao.png', payout: { three: 50, two: 5 } },
            { name: 'Maca', emojiForMessage: 'üçé', value: 'APPLE', imageSrc: 'imagens_frutas/Maca.png', payout: { three: 40, two: 4 } },
            { name: 'Laranja', emojiForMessage: 'üçä', value: 'ORANGE', imageSrc: 'imagens_frutas/Laranja.png', payout: { three: 30, two: 0 } },
            { name: 'Uva', emojiForMessage: 'üçá', value: 'GRAPE', imageSrc: 'imagens_frutas/uva.png', payout: { three: 20, two: 0 } },
            { name: 'Melancia', emojiForMessage: 'üçâ', value: 'WATERMELON', imageSrc: 'imagens_frutas/melancia.png', payout: { three: 15, two: 0 } },
            { name: 'Abacate', emojiForMessage: 'ü•ë', value: 'AVOCADO', imageSrc: 'imagens_frutas/Abacate.png', payout: { three: 100, two: 10 } },
            { name: 'Morango', emojiForMessage: 'üçì', value: 'STRAWBERRY', imageSrc: 'imagens_frutas/Morango.png', payout: { three: 200, two: 20 } },
            { name: 'Banana', emojiForMessage: 'üçå', value: 'BANANA', imageSrc: 'imagens_frutas/Banana.png', payout: { three: 80, two: 8 } }
        ];
        const defaultImageSrc = 'imagens_frutas/Trevo.png'; // PONTO DE INTERROGA√á√ÉO SUBSTITU√çDO POR TREVO

        const reel1Image = document.getElementById('reel1Image');
        const reel2Image = document.getElementById('reel2Image');
        const reel3Image = document.getElementById('reel3Image');
        const reel1Container = document.getElementById('reel1Container');
        const reel2Container = document.getElementById('reel2Container');
        const reel3Container = document.getElementById('reel3Container');
        const spinButton = document.getElementById('spinButton');
        const creditsDisplay = document.getElementById('credits');
        const messageDisplay = document.getElementById('message');
        const gameOverModal = document.getElementById('gameOverModal');
        const resetButton = document.getElementById('resetButton');
        const modalTitle = document.getElementById('modalTitle');
        const modalMessage = document.getElementById('modalMessage');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const loadingMessage = document.getElementById('loadingMessage');

        let credits = 100;
        const spinCost = 5;
        let isSpinning = false;

        function initializeGameAssets() {
            loadingOverlay.style.display = 'flex';
            spinButton.disabled = true;
            loadingMessage.textContent = 'A carregar imagens locais...';

            reel1Image.src = defaultImageSrc;
            reel2Image.src = defaultImageSrc;
            reel3Image.src = defaultImageSrc;

            setTimeout(() => {
                loadingOverlay.style.display = 'none';
                if (credits >= spinCost) {
                    spinButton.disabled = false;
                } else {
                    spinButton.disabled = true;
                    showModal("SEM CR√âDITOS", "Voc√™ n√£o tem cr√©ditos suficientes para o primeiro giro. Reinicie para jogar.");
                }
                messageDisplay.textContent = credits >= spinCost ? 'CLIQUE EM GIRAR!' : 'SEM CR√âDITOS';
            }, 500);
        }

        function getRandomSymbol() {
            // CORRE√á√ÉO: Removidos colchetes extras
            return symbols[Math.floor(Math.random() * symbols.length)];
        }

        async function spinReels() {
            if (isSpinning) return;
            if (credits < spinCost) {
                showModal("SEM CR√âDITOS", "Voc√™ n√£o tem cr√©ditos suficientes para girar.");
                return;
            }

            isSpinning = true;
            spinButton.disabled = true;
            credits -= spinCost;
            updateCredits();
            messageDisplay.textContent = 'GIRANDO...';
            messageDisplay.style.color = '#a78bfa';

            const reelElements = [
                { img: reel1Image, container: reel1Container },
                { img: reel2Image, container: reel2Container },
                { img: reel3Image, container: reel3Container }
            ];
            reelElements.forEach(reel => reel.container.classList.add('spinning'));

            const spinDuration = 1200;
            const animationInterval = 80;
            let elapsed = 0;

            const animation = setInterval(() => {
                reelElements.forEach(reel => {
                    const randomSymbol = getRandomSymbol();
                    if (randomSymbol && randomSymbol.imageSrc) { // Verifica√ß√£o adicional
                        reel.img.src = randomSymbol.imageSrc;
                    } else {
                        console.error("S√≠mbolo aleat√≥rio ou imageSrc indefinido durante a anima√ß√£o:", randomSymbol);
                        reel.img.src = defaultImageSrc; // Fallback para imagem padr√£o se algo der errado
                    }
                });
                elapsed += animationInterval;
                if (elapsed >= spinDuration) {
                    clearInterval(animation);
                    finishSpin();
                }
            }, animationInterval);
        }

        function finishSpin() {
            const results = [getRandomSymbol(), getRandomSymbol(), getRandomSymbol()];

            // CORRE√á√ÉO: Removidos colchetes extras e adicionada verifica√ß√£o
            if (results[0] && results[0].imageSrc) reel1Image.src = results[0].imageSrc; else reel1Image.src = defaultImageSrc;
            if (results[1] && results[1].imageSrc) reel2Image.src = results[1].imageSrc; else reel2Image.src = defaultImageSrc;
            if (results[2] && results[2].imageSrc) reel3Image.src = results[2].imageSrc; else reel3Image.src = defaultImageSrc;


            // CORRE√á√ÉO: Removidos colchetes extras
            [reel1Container, reel2Container, reel3Container].forEach(container => container.classList.remove('spinning'));

            checkWin(results);

            isSpinning = false;
            if (credits >= spinCost) {
                spinButton.disabled = false;
            } else {
                spinButton.disabled = true;
                setTimeout(() => {
                    if(credits < spinCost) {
                         showModal("FIM DE JOGO!", "Voc√™ ficou sem cr√©ditos.");
                    }
                }, 1000);
            }
        }

        function checkWin(results) {
            // Adicionada verifica√ß√£o para garantir que os resultados e seus valores s√£o v√°lidos
            if (!results || results.length < 3 || !results[0] || !results[1] || !results[2] ||
                results.some(r => typeof r.value === 'undefined' || typeof r.payout === 'undefined')) {
                console.error("Resultados inv√°lidos em checkWin:", results);
                messageDisplay.textContent = "Erro ao verificar. Tente novamente.";
                messageDisplay.style.color = '#f87171'; // Vermelho para erro
                return;
            }

            const [s1, s2, s3] = results;
            let winAmount = 0;
            let winMessage = "TENTE NOVAMENTE!";

            if (s1.value === s2.value && s2.value === s3.value) {
                winAmount = s1.payout.three;
                winMessage = `TRINCA DE ${s1.name.toUpperCase()} ${s1.emojiForMessage}! +${winAmount} CR√âDITOS!`;
            }
            else if (s1.value === s2.value && s1.payout.two > 0) {
                winAmount = s1.payout.two;
                winMessage = `DOIS ${s1.name.toUpperCase()} ${s1.emojiForMessage} SEGUIDOS! +${winAmount} CR√âDITOS!`;
            } else if (s2.value === s3.value && s2.payout.two > 0) {
                const firstTwoMatch = s1.value === s2.value && s1.payout.two > 0;
                if (!firstTwoMatch || s1.value !== s3.value) {
                     winAmount = s2.payout.two;
                     winMessage = `DOIS ${s2.name.toUpperCase()} ${s2.emojiForMessage} SEGUIDOS! +${winAmount} CR√âDITOS!`;
                }
            }

            if (winAmount > 0) {
                credits += winAmount;
                messageDisplay.textContent = winMessage;
                messageDisplay.style.color = '#34d399';
            } else {
                messageDisplay.textContent = winMessage;
                messageDisplay.style.color = '#f87171';
            }
            updateCredits();

            if (credits < spinCost && winAmount === 0) {
                 setTimeout(() => {
                    if(credits < spinCost) {
                        showModal("FIM DE JOGO!", "Voc√™ ficou sem cr√©ditos.");
                        spinButton.disabled = true;
                    }
                }, 1500);
            }
        }

        function updateCredits() {
            creditsDisplay.textContent = credits;
        }

        function showModal(title, message) {
            modalTitle.textContent = title;
            modalMessage.textContent = message;
            gameOverModal.style.display = 'flex';
        }

        function hideModal() {
            gameOverModal.style.display = 'none';
        }

        function resetGame() {
            credits = 100;
            updateCredits();
            messageDisplay.textContent = 'BOA SORTE!';
            messageDisplay.style.color = '#e5e7eb';

            reel1Image.src = defaultImageSrc;
            reel2Image.src = defaultImageSrc;
            reel3Image.src = defaultImageSrc;

            if (credits >= spinCost && !isSpinning) {
                 spinButton.disabled = false;
            }
            hideModal();
        }

        spinButton.addEventListener('click', spinReels);
        resetButton.addEventListener('click', resetGame);

        window.onload = () => {
            updateCredits();
            initializeGameAssets();
        };
    </script>
</body>
</html>
